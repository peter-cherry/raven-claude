name: Propose to Clean
on:
  push:
    branches: [ main ]

jobs:
  propose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Preflight auth to clean repo
        run: |
          set -euxo pipefail
          echo "Target repo: ${{ secrets.CLEAN_REPO }}"
          git ls-remote "https://x-access-token:${{ secrets.CLEAN_REPO_TOKEN }}@github.com/${{ secrets.CLEAN_REPO }}.git" HEAD

      - name: Prepare clean working tree
        run: |
          set -euxo pipefail
          git config user.name  "bot-proposer"
          git config user.email "bot@users.noreply.github.com"

          rm -rf clean
          mkdir clean && cd clean
          git init
          git remote add origin "https://x-access-token:${{ secrets.CLEAN_REPO_TOKEN }}@github.com/${{ secrets.CLEAN_REPO }}.git"
          git fetch --no-tags --depth=1 origin main
          git checkout -b "bot/${GITHUB_REPOSITORY_OWNER}-$(basename "${GITHUB_REPOSITORY}")-${GITHUB_SHA}" origin/main
          cd ..

          rsync -av \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'node_modules' \
            --exclude '.next' \
            ./ ./clean/ || true

      - name: Commit & push
        run: |
          set -euxo pipefail
          cd clean
          git config user.name  "bot-proposer"
          git config user.email "bot@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to propose."
            exit 0
          fi
          git commit -m "feat(bot): propose changes from ${GITHUB_REPOSITORY}@${GITHUB_SHA}"
          git push origin HEAD

      - name: Open PR to clean repo
        uses: actions/github-script@v7
        env:
          CLEAN_REPO: ${{ secrets.CLEAN_REPO }}
        with:
          github-token: ${{ secrets.CLEAN_REPO_TOKEN }}
          script: |
            const [owner, repo] = process.env.CLEAN_REPO.split('/');
            const head  = `bot/${process.env.GITHUB_REPOSITORY_OWNER}-${process.env.GITHUB_REPOSITORY.split('/')[1]}-${process.env.GITHUB_SHA}`;
            const title = `feat(bot): propose changes from ${process.env.GITHUB_REPOSITORY}@${process.env.GITHUB_SHA.substring(0,7)}`;
            const body  = 'Auto-proposed by agent repo after CI passed.';
            await github.rest.pulls.create({ owner, repo, title, head, base: 'main', body });
