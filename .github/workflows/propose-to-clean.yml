name: Propose to Clean

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  propose:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout agent repo
        uses: actions/checkout@v4

      - name: Build filtered payload for Clean
        run: |
          rm -rf clean && mkdir clean
          rsync -av --delete --filter='merge .github/clean-filter.rules' . ./clean

      - name: Prepare stable bot branch (one per agent)
        id: prep
        run: echo "branch=bot/${{ github.event.repository.name }}" >> "$GITHUB_OUTPUT"

      - name: Push branch to Clean
        working-directory: clean
        env:
          TOKEN: ${{ secrets.CLEAN_REPO_TOKEN }}   # PAT to Clean repo
          CLEAN_REPO: ${{ secrets.CLEAN_REPO }}     # e.g. peter-cherry/raven
        run: |
          set -euo pipefail
          git init
          git config user.name "raven-bot"
          git config user.email "raven-bot@users.noreply.github.com"
          git remote add origin "https://x-access-token:${TOKEN}@github.com/${CLEAN_REPO}.git"
          git checkout -b "${{ steps.prep.outputs.branch }}"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to propose."
            exit 0
          fi
          git commit -m "feat(bot): propose from $GITHUB_REPOSITORY@$GITHUB_SHA"
          # create or update the same remote branch
          git push -u origin "${{ steps.prep.outputs.branch }}" || git push origin "${{ steps.prep.outputs.branch }}"

      - name: Open or reuse PR into Clean
        env:
          TOKEN: ${{ secrets.CLEAN_REPO_TOKEN }}
          CLEAN_REPO: ${{ secrets.CLEAN_REPO }}
        run: |
          set -euo pipefail
          head="${{ steps.prep.outputs.branch }}"
          base="main"
          existing=$(curl -s -H "Authorization: token ${TOKEN}" \
            "https://api.github.com/repos/${CLEAN_REPO}/pulls?state=open&head=${CLEAN_REPO%/*}:${head}" \
            | jq -r '.[0].number // empty')
          if [ -z "$existing" ] || [ "$existing" = "null" ]; then
            curl -s -X POST -H "Authorization: token ${TOKEN}" -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${CLEAN_REPO}/pulls" \
              -d @- <<EOF >/dev/null
            { "title": "feat(bot): propose changes from ${GITHUB_REPOSITORY}",
              "head": "${head}",
              "base": "${base}",
              "body": "Automated proposal from **${GITHUB_REPOSITORY}** (source: ${GITHUB_SHA})" }
EOF
          else
            echo "PR #$existing already openâ€”reusing."
          fi
